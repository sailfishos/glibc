From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Bj=C3=B6rn=20Bidar?= <bjorn.bidar@jolla.com>
Date: Tue, 31 Aug 2021 01:56:22 +0300
Subject: [PATCH] (scratchbox2) Add ld.so --argv0 <STRING> to use <STRING> as
 argv0

A small patch for the dynamic linker/loader ("ld.so", also known as
"ld-linux.so"). The dynamic linker is part of the "glibc" package.

This patch adds one command line option which is only used
when the dynamic linker is started as an ordinary program,
which is a seldom used way to start dynamically linked
programs. SB2 uses that option to preserve semantics of the
exec* calls

[SB2 starts the dynamic linker as an ordinary program,
to be able to get full control of the execution environment -
this is somewhat complex system. Study the implementation
of SB2's exec-related functions for full details]

Note that this patch causes no harm in the default case, i.e.
when the dynamic linker is started "automatically" by the kernel.
---
 elf/dl-usage.c | 1 +
 elf/rtld.c     | 7 +++++++
 2 files changed, 8 insertions(+)

diff --git a/elf/dl-usage.c b/elf/dl-usage.c
index 01cb6f4f07..ce2e1e93e2 100644
--- a/elf/dl-usage.c
+++ b/elf/dl-usage.c
@@ -254,6 +254,7 @@ setting environment variables (which would be inherited by subprocesses).\n\
                         only search built-in subdirectories if in LIST\n\
   --inhibit-rpath LIST  ignore RUNPATH and RPATH information in object names\n\
                         in LIST\n\
+  --argv0 STRING        use STRING as argv[0]\n\
   --audit LIST          use objects named in LIST as auditors\n\
   --preload LIST        preload objects named in LIST\n\
   --argv0 STRING        set argv[0] to STRING before running\n"
diff --git a/elf/rtld.c b/elf/rtld.c
index e33175041a..6c8e88241c 100644
--- a/elf/rtld.c
+++ b/elf/rtld.c
@@ -1384,6 +1384,7 @@ dl_main (const ElfW(Phdr) *phdr,
   const char *ld_so_name = _dl_argv[0];
   if (*user_entry == (ElfW(Addr)) ENTRY_POINT)
     {
+      char *forced_argv0 = NULL;
       /* Ho ho.  We are not the program interpreter!  We are the program
 	 itself!  This means someone ran ld.so as a command.  Well, that
 	 might be convenient to do sometimes.  We support it by
@@ -1471,6 +1472,12 @@ dl_main (const ElfW(Phdr) *phdr,
 	    _dl_argc -= 2;
 	    _dl_argv += 2;
 	  }
+	else if (! strcmp (_dl_argv[1], "--argv0") && _dl_argc > 2)
+	  {
+	    forced_argv0 = _dl_argv[2];
+	    _dl_argc -= 2;
+	    _dl_argv += 2;
+	  }
 	else if (! strcmp (_dl_argv[1], "--argv0") && _dl_argc > 2)
 	  {
 	    argv0 = _dl_argv[2];
